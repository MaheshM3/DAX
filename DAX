MoM Change = 
VAR CurrentMonthCount = CALCULATE(COUNTAX(DISTINCT('Table'[ID])), 'Table'[Date] IN ALLSELECTED('Table'[Date]))
VAR PreviousMonth = EDATE( MAX( 'Table'[Date] ), -1)
VAR PreviousMonthCount = 
    IF(
        ISBLANK(CALCULATE(COUNTAX(DISTINCT('Table'[ID])), 'Table'[Date] = PreviousMonth)),
        BLANK(),
        CALCULATE(COUNTAX(DISTINCT('Table'[ID])), 'Table'[Date] = PreviousMonth)
    )
VAR Change = IF(ISBLANK(PreviousMonthCount), BLANK(), CurrentMonthCount - PreviousMonthCount)
RETURN 
    IF(ISBLANK(Change), 
       BLANK(), 
       IF(Change > 0, 
          CONCATENATE("↑", FORMAT(Change, "General Number")), 
          IF(Change < 0, 
             CONCATENATE("↓", FORMAT(-Change, "General Number")), 
             "0"
          )
       )
    )

Date = DISTINCT(financials[Date]) 

TTM = 
var _curr = max('Date'[Date])
var _min = min(financials[Date])
var _result =
CALCULATE(sum(financials[Discounts]),filter(financials, financials[Date]>=_min && financials[Date]<=_curr))
return
_result

############# Last Refresh Date
let
  UTC_DateTimeZone = DateTimeZone.UtcNow(), 
  UTC_Date         = Date.From(UTC_DateTimeZone), 
  StartSummerTime  = Date.StartOfWeek(#date(Date.Year(UTC_Date), 3, 31), Day.Sunday), 
  StartWinterTime  = Date.StartOfWeek(#date(Date.Year(UTC_Date), 10, 31), Day.Sunday), 
  UTC_Offset       = if UTC_Date >= StartSummerTime and UTC_Date < StartWinterTime then 2 else 1, 
  CET_Timezone     = DateTimeZone.SwitchZone(UTC_DateTimeZone, UTC_Offset)
in
  CET_Timezone
